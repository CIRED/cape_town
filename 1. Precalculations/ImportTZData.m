function [X,Y,TZ2013,Ink1,Ink2,Ink3,Ink4] = ImportTZData(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [X,Y,TZ2013,AREA,DISS,ZONES,BY5ORIGINS,BY5DESTINA,PTODORIGIN,PTODDESTIN,EMPLOI_TAZ,EMPLOI_T_1,EMPLOI_T_2,EMPLOI_T_3,EMPLOI_T_4,EMPLOI_T_5,EMPLOI_T_6,EMPLOI_T_7,EMPLOI_T_8,JOB_TOTAL,JOB_DENS,INK1,INK2,INK3,INK4,JOB_TOT]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [X,Y,TZ2013,AREA,DISS,ZONES,BY5ORIGINS,BY5DESTINA,PTODORIGIN,PTODDESTIN,EMPLOI_TAZ,EMPLOI_T_1,EMPLOI_T_2,EMPLOI_T_3,EMPLOI_T_4,EMPLOI_T_5,EMPLOI_T_6,EMPLOI_T_7,EMPLOI_T_8,JOB_TOTAL,JOB_DENS,INK1,INK2,INK3,INK4,JOB_TOT]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [X,Y,TZ2013,Area,diss,Zones,BY5Origins,BY5Destina,PTODOrigin,PTODDestin,emploi_TAZ,emploi_T_1,emploi_T_2,emploi_T_3,emploi_T_4,emploi_T_5,emploi_T_6,emploi_T_7,emploi_T_8,job_total,job_dens,Ink1,Ink2,Ink3,Ink4,job_tot] = importfile('TAZ_amp_2013_proj_centro2.csv',2, 1788);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/11/22 19:24:33

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: text (%s)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
X = dataArray{:, 1};
Y = dataArray{:, 2};
TZ2013 = dataArray{:, 3};
Area = dataArray{:, 4};
diss = dataArray{:, 5};
Zones = dataArray{:, 6};
BY5Origins = dataArray{:, 7};
BY5Destina = dataArray{:, 8};
PTODOrigin = dataArray{:, 9};
PTODDestin = dataArray{:, 10};
jobsTZ = dataArray{:, 11};
jobsT1 = dataArray{:, 12};
jobsT2 = dataArray{:, 13};
jobsT3 = dataArray{:, 14};
jobsT4 = dataArray{:, 15};
jobsT5 = dataArray{:, 16};
jobsT6 = dataArray{:, 17};
jobsT7 = dataArray{:, 18};
jobsT8 = dataArray{:, 19};
jobsTotal = dataArray{:, 20};
jobsDensity = dataArray{:, 21};
Ink1 = dataArray{:, 22};
Ink2 = dataArray{:, 23};
Ink3 = dataArray{:, 24};
Ink4 = dataArray{:, 25};
job_tot = dataArray{:, 26};


